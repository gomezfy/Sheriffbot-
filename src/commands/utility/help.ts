import { SlashCommandBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle, ChatInputCommandInteraction, MessageFlags, ButtonInteraction, EmbedBuilder, ComponentType } from 'discord.js';
import { t, getLocale } from '../../utils/i18n';
import { getMoneybagEmoji, getSlotMachineEmoji, getPickaxeEmoji, getRevolverEmoji } from '../../utils/customEmojis';

const CATEGORIES = {
  OVERVIEW: 'overview',
  ECONOMY: 'economy',
  GAMBLING: 'gambling',
  MINING: 'mining',
  PROFILE: 'profile',
  BOUNTY: 'bounty',
  ADMIN: 'admin',
  UTILITY: 'utility'
};

function getOverviewEmbed(interaction: ChatInputCommandInteraction): EmbedBuilder {
  const locale = getLocale(interaction);
  
  const moneyEmoji = getMoneybagEmoji();
  const slotEmoji = getSlotMachineEmoji();
  const pickaxeEmoji = getPickaxeEmoji();
  const revolverEmoji = getRevolverEmoji();
  
  const categoryMap: Record<string, string> = {
    'pt-BR': `${moneyEmoji} **Economia & Trading:** \`/daily\` ‚Ä¢ \`/give\` ‚Ä¢ \`/inventory\` ‚Ä¢ \`/redeem\` ‚Ä¢ \`/leaderboard\`\n8 comandos de economia e moedas\n\n${slotEmoji} **Gambling & Jogos:** \`/casino\` ‚Ä¢ \`/dice\` ‚Ä¢ \`/poker\` ‚Ä¢ \`/bankrob\` ‚Ä¢ \`/duel\`\n5 comandos de apostas e jogos\n\n${pickaxeEmoji} **Minera√ß√£o:** \`/mine\` - Sistema de minera√ß√£o solo e cooperativa\n1 comando com m√∫ltiplos modos\n\nüë§ **Perfil & Customiza√ß√£o:** \`/profile\` ‚Ä¢ \`/avatar\` ‚Ä¢ \`/inventory\`\n3 comandos de perfil e visual\n\n${revolverEmoji} **Sistema de Bounty:** \`/wanted\` ‚Ä¢ \`/bounties\` ‚Ä¢ \`/capture\` ‚Ä¢ \`/clearbounty\`\n4 comandos de recompensas\n\n‚öôÔ∏è **Administra√ß√£o:** \`/announcement\` ‚Ä¢ \`/servidor\` ‚Ä¢ \`/setwelcome\` ‚Ä¢ \`/setlogs\`\n10 comandos administrativos\n\nüîß **Utilidades:** \`/help\` ‚Ä¢ \`/ping\` ‚Ä¢ \`/idioma\`\n3 comandos de utilidade`,
    'en-US': `${moneyEmoji} **Economy & Trading:** \`/daily\` ‚Ä¢ \`/give\` ‚Ä¢ \`/inventory\` ‚Ä¢ \`/redeem\` ‚Ä¢ \`/leaderboard\`\n8 economy and coins commands\n\n${slotEmoji} **Gambling & Games:** \`/casino\` ‚Ä¢ \`/dice\` ‚Ä¢ \`/poker\` ‚Ä¢ \`/bankrob\` ‚Ä¢ \`/duel\`\n5 gambling and games commands\n\n${pickaxeEmoji} **Mining:** \`/mine\` - Solo and cooperative mining system\n1 command with multiple modes\n\nüë§ **Profile & Customization:** \`/profile\` ‚Ä¢ \`/avatar\` ‚Ä¢ \`/inventory\`\n3 profile and visual commands\n\n${revolverEmoji} **Bounty System:** \`/wanted\` ‚Ä¢ \`/bounties\` ‚Ä¢ \`/capture\` ‚Ä¢ \`/clearbounty\`\n4 bounty commands\n\n‚öôÔ∏è **Administration:** \`/announcement\` ‚Ä¢ \`/servidor\` ‚Ä¢ \`/setwelcome\` ‚Ä¢ \`/setlogs\`\n10 administrative commands\n\nüîß **Utilities:** \`/help\` ‚Ä¢ \`/ping\` ‚Ä¢ \`/idioma\`\n3 utility commands`,
    'es-ES': `${moneyEmoji} **Econom√≠a & Trading:** \`/daily\` ‚Ä¢ \`/give\` ‚Ä¢ \`/inventory\` ‚Ä¢ \`/redeem\` ‚Ä¢ \`/leaderboard\`\n8 comandos de econom√≠a y monedas\n\n${slotEmoji} **Apuestas & Juegos:** \`/casino\` ‚Ä¢ \`/dice\` ‚Ä¢ \`/poker\` ‚Ä¢ \`/bankrob\` ‚Ä¢ \`/duel\`\n5 comandos de apuestas y juegos\n\n${pickaxeEmoji} **Miner√≠a:** \`/mine\` - Sistema de miner√≠a solo y cooperativa\n1 comando con m√∫ltiples modos\n\nüë§ **Perfil & Personalizaci√≥n:** \`/profile\` ‚Ä¢ \`/avatar\` ‚Ä¢ \`/inventory\`\n3 comandos de perfil y visual\n\n${revolverEmoji} **Sistema de Recompensas:** \`/wanted\` ‚Ä¢ \`/bounties\` ‚Ä¢ \`/capture\` ‚Ä¢ \`/clearbounty\`\n4 comandos de recompensas\n\n‚öôÔ∏è **Administraci√≥n:** \`/announcement\` ‚Ä¢ \`/servidor\` ‚Ä¢ \`/setwelcome\` ‚Ä¢ \`/setlogs\`\n10 comandos administrativos\n\nüîß **Utilidades:** \`/help\` ‚Ä¢ \`/ping\` ‚Ä¢ \`/idioma\`\n3 comandos de utilidad`,
    'fr': `${moneyEmoji} **√âconomie & Trading:** \`/daily\` ‚Ä¢ \`/give\` ‚Ä¢ \`/inventory\` ‚Ä¢ \`/redeem\` ‚Ä¢ \`/leaderboard\`\n8 commandes d'√©conomie et monnaie\n\n${slotEmoji} **Jeux & Paris:** \`/casino\` ‚Ä¢ \`/dice\` ‚Ä¢ \`/poker\` ‚Ä¢ \`/bankrob\` ‚Ä¢ \`/duel\`\n5 commandes de jeux et paris\n\n${pickaxeEmoji} **Minage:** \`/mine\` - Syst√®me de minage solo et coop√©ratif\n1 commande avec plusieurs modes\n\nüë§ **Profil & Personnalisation:** \`/profile\` ‚Ä¢ \`/avatar\` ‚Ä¢ \`/inventory\`\n3 commandes de profil et visuel\n\n${revolverEmoji} **Syst√®me de Primes:** \`/wanted\` ‚Ä¢ \`/bounties\` ‚Ä¢ \`/capture\` ‚Ä¢ \`/clearbounty\`\n4 commandes de primes\n\n‚öôÔ∏è **Administration:** \`/announcement\` ‚Ä¢ \`/servidor\` ‚Ä¢ \`/setwelcome\` ‚Ä¢ \`/setlogs\`\n10 commandes administratives\n\nüîß **Utilitaires:** \`/help\` ‚Ä¢ \`/ping\` ‚Ä¢ \`/idioma\`\n3 commandes utilitaires`
  };
  
  return new EmbedBuilder()
    .setColor(0x3498DB)
    .setTitle(t(interaction, 'help_title'))
    .setDescription(t(interaction, 'help_overview_desc') + '\n\n' + (categoryMap[locale] || categoryMap['en-US']))
    .setFooter({ text: t(interaction, 'help_footer') })
    .setThumbnail('https://cdn.discordapp.com/avatars/1426734768111747284/77c49c0e33e64e32cc5bc42f9e6cfe82.png');
}

function getEconomyEmbed(interaction: ChatInputCommandInteraction): EmbedBuilder {
  const locale = getLocale(interaction);
  
  const dmText: Record<string, string> = {
    'pt-BR': '(Funciona em DM)',
    'en-US': '(Works in DM)',
    'es-ES': '(Funciona en MP)',
    'fr': '(Fonctionne en MP)'
  };
  
  const serverText: Record<string, string> = {
    'pt-BR': '(Apenas em Servidores)',
    'en-US': '(Servers Only)',
    'es-ES': '(Solo en Servidores)',
    'fr': '(Serveurs Uniquement)'
  };
  
  return new EmbedBuilder()
    .setColor(0x2ECC71)
    .setTitle(t(interaction, 'help_economy_title'))
    .setDescription(t(interaction, 'help_economy_desc'))
    .setFooter({ text: t(interaction, 'help_footer') })
    .addFields(
      { name: `üì± /daily ${dmText[locale]}`, value: locale === 'pt-BR' ? '‚Ä¢ Recompensa di√°ria de moedas\n‚Ä¢ Sistema de streak\n‚Ä¢ B√¥nus progressivo' : locale === 'fr' ? '‚Ä¢ R√©compense quotidienne\n‚Ä¢ Syst√®me de s√©rie\n‚Ä¢ Bonus progressif' : locale === 'es-ES' ? '‚Ä¢ Recompensa diaria\n‚Ä¢ Sistema de racha\n‚Ä¢ Bonificaci√≥n progresiva' : '‚Ä¢ Daily coin reward\n‚Ä¢ Streak system\n‚Ä¢ Progressive bonus', inline: false },
      { name: `üì± /redeem ${dmText[locale]}`, value: locale === 'pt-BR' ? '‚Ä¢ Resgate c√≥digos da loja\n‚Ä¢ Eventos especiais\n‚Ä¢ Uso √∫nico' : locale === 'fr' ? '‚Ä¢ Codes de la boutique\n‚Ä¢ √âv√©nements sp√©ciaux\n‚Ä¢ Usage unique' : locale === 'es-ES' ? '‚Ä¢ C√≥digos de la tienda\n‚Ä¢ Eventos especiales\n‚Ä¢ Uso √∫nico' : '‚Ä¢ Shop codes\n‚Ä¢ Special events\n‚Ä¢ Single use', inline: false },
      { name: `üì± /leaderboard ${dmText[locale]}`, value: locale === 'pt-BR' ? '‚Ä¢ Top 10 jogadores\n‚Ä¢ Visual profissional\n‚Ä¢ Sua posi√ß√£o' : locale === 'fr' ? '‚Ä¢ Top 10 joueurs\n‚Ä¢ Visuel professionnel\n‚Ä¢ Votre position' : locale === 'es-ES' ? '‚Ä¢ Top 10 jugadores\n‚Ä¢ Visual profesional\n‚Ä¢ Tu posici√≥n' : '‚Ä¢ Top 10 players\n‚Ä¢ Professional visual\n‚Ä¢ Your position', inline: false },
      { name: `üì± /inventory ${dmText[locale]}`, value: locale === 'pt-BR' ? '‚Ä¢ Veja seus itens\n‚Ä¢ Peso/capacidade\n‚Ä¢ Organizado' : locale === 'fr' ? '‚Ä¢ Voir vos objets\n‚Ä¢ Poids/capacit√©\n‚Ä¢ Organis√©' : locale === 'es-ES' ? '‚Ä¢ Ver tus objetos\n‚Ä¢ Peso/capacidad\n‚Ä¢ Organizado' : '‚Ä¢ View your items\n‚Ä¢ Weight/capacity\n‚Ä¢ Organized', inline: false },
      { name: `üè¶ /give ${serverText[locale]}`, value: locale === 'pt-BR' ? '‚Ä¢ Transferir moedas/itens\n‚Ä¢ Sistema de confirma√ß√£o\n‚Ä¢ Logs' : locale === 'fr' ? '‚Ä¢ Transf√©rer monnaie/objets\n‚Ä¢ Syst√®me de confirmation\n‚Ä¢ Journaux' : locale === 'es-ES' ? '‚Ä¢ Transferir monedas/objetos\n‚Ä¢ Sistema de confirmaci√≥n\n‚Ä¢ Registros' : '‚Ä¢ Transfer coins/items\n‚Ä¢ Confirmation system\n‚Ä¢ Logs', inline: false }
    );
}

function getGamblingEmbed(interaction: ChatInputCommandInteraction): EmbedBuilder {
  const locale = getLocale(interaction);
  
  const dmText: Record<string, string> = {
    'pt-BR': '(Funciona em DM)',
    'en-US': '(Works in DM)',
    'es-ES': '(Funciona en MP)',
    'fr': '(Fonctionne en MP)'
  };
  
  const serverText: Record<string, string> = {
    'pt-BR': '(Apenas em Servidores)',
    'en-US': '(Servers Only)',
    'es-ES': '(Solo en Servidores)',
    'fr': '(Serveurs Uniquement)'
  };
  
  return new EmbedBuilder()
    .setColor(0x9B59B6)
    .setTitle(t(interaction, 'help_gambling_title'))
    .setDescription(t(interaction, 'help_gambling_desc'))
    .setFooter({ text: t(interaction, 'help_footer') })
    .addFields(
      { name: `üì± /casino ${dmText[locale]}`, value: locale === 'pt-BR' ? '‚Ä¢ Slot machine\n‚Ä¢ Jackpots\n‚Ä¢ Apostas flex√≠veis' : locale === 'fr' ? '‚Ä¢ Machine √† sous\n‚Ä¢ Jackpots\n‚Ä¢ Paris flexibles' : locale === 'es-ES' ? '‚Ä¢ Tragamonedas\n‚Ä¢ Jackpots\n‚Ä¢ Apuestas flexibles' : '‚Ä¢ Slot machine\n‚Ä¢ Jackpots\n‚Ä¢ Flexible bets', inline: false },
      { name: `üé≤ /dice ${serverText[locale]}`, value: locale === 'pt-BR' ? '‚Ä¢ Duelo de dados\n‚Ä¢ Desafie jogadores\n‚Ä¢ Maior n√∫mero vence' : locale === 'fr' ? '‚Ä¢ Duel de d√©s\n‚Ä¢ D√©fiez les joueurs\n‚Ä¢ Plus grand gagne' : locale === 'es-ES' ? '‚Ä¢ Duelo de dados\n‚Ä¢ Desaf√≠a jugadores\n‚Ä¢ Mayor gana' : '‚Ä¢ Dice duel\n‚Ä¢ Challenge players\n‚Ä¢ Highest wins', inline: false },
      { name: `üÉè /poker ${serverText[locale]}`, value: locale === 'pt-BR' ? '‚Ä¢ Texas Hold\'em\n‚Ä¢ Regras oficiais\n‚Ä¢ Multiplayer' : locale === 'fr' ? '‚Ä¢ Texas Hold\'em\n‚Ä¢ R√®gles officielles\n‚Ä¢ Multijoueur' : locale === 'es-ES' ? '‚Ä¢ Texas Hold\'em\n‚Ä¢ Reglas oficiales\n‚Ä¢ Multijugador' : '‚Ä¢ Texas Hold\'em\n‚Ä¢ Official rules\n‚Ä¢ Multiplayer', inline: false },
      { name: `üè¶ /bankrob ${serverText[locale]}`, value: locale === 'pt-BR' ? '‚Ä¢ Assalto cooperativo\n‚Ä¢ 2 jogadores\n‚Ä¢ Cooldown 2h' : locale === 'fr' ? '‚Ä¢ Braquage coop√©ratif\n‚Ä¢ 2 joueurs\n‚Ä¢ Temps de r√©cup√©ration 2h' : locale === 'es-ES' ? '‚Ä¢ Asalto cooperativo\n‚Ä¢ 2 jugadores\n‚Ä¢ Cooldown 2h' : '‚Ä¢ Cooperative heist\n‚Ä¢ 2 players\n‚Ä¢ 2h cooldown', inline: false },
      { name: `üî´ /duel ${serverText[locale]}`, value: locale === 'pt-BR' ? '‚Ä¢ Duelo PvP\n‚Ä¢ Combate por turnos\n‚Ä¢ Sistema de XP' : locale === 'fr' ? '‚Ä¢ Duel PvP\n‚Ä¢ Combat par tours\n‚Ä¢ Syst√®me d\'XP' : locale === 'es-ES' ? '‚Ä¢ Duelo PvP\n‚Ä¢ Combate por turnos\n‚Ä¢ Sistema de XP' : '‚Ä¢ PvP duel\n‚Ä¢ Turn-based combat\n‚Ä¢ XP system', inline: false }
    );
}

function getMiningEmbed(interaction: ChatInputCommandInteraction): EmbedBuilder {
  return new EmbedBuilder()
    .setColor(0xE67E22)
    .setTitle(t(interaction, 'help_mining_title'))
    .setDescription(t(interaction, 'help_mining_desc'))
    .setFooter({ text: t(interaction, 'help_footer') });
}

function getProfileEmbed(interaction: ChatInputCommandInteraction): EmbedBuilder {
  return new EmbedBuilder()
    .setColor(0x3498DB)
    .setTitle(t(interaction, 'help_profile_title'))
    .setDescription(t(interaction, 'help_profile_desc'))
    .setFooter({ text: t(interaction, 'help_footer') });
}

function getBountyEmbed(interaction: ChatInputCommandInteraction): EmbedBuilder {
  return new EmbedBuilder()
    .setColor(0xE74C3C)
    .setTitle(t(interaction, 'help_bounty_title'))
    .setDescription(t(interaction, 'help_bounty_desc'))
    .setFooter({ text: t(interaction, 'help_footer') });
}

function getAdminEmbed(interaction: ChatInputCommandInteraction): EmbedBuilder {
  return new EmbedBuilder()
    .setColor(0xF39C12)
    .setTitle(t(interaction, 'help_admin_title'))
    .setDescription(t(interaction, 'help_admin_desc'))
    .setFooter({ text: t(interaction, 'help_footer') });
}

function getUtilityEmbed(interaction: ChatInputCommandInteraction): EmbedBuilder {
  return new EmbedBuilder()
    .setColor(0x95A5A6)
    .setTitle(t(interaction, 'help_utility_title'))
    .setDescription(t(interaction, 'help_utility_desc'))
    .setFooter({ text: t(interaction, 'help_footer') });
}

function getCategoryButtons(interaction: ChatInputCommandInteraction, currentCategory: string): ActionRowBuilder<ButtonBuilder> {
  return new ActionRowBuilder<ButtonBuilder>()
    .addComponents(
      new ButtonBuilder()
        .setCustomId('help_economy')
        .setLabel(t(interaction, 'help_btn_economy'))
        .setStyle(currentCategory === CATEGORIES.ECONOMY ? ButtonStyle.Primary : ButtonStyle.Secondary)
        .setDisabled(currentCategory === CATEGORIES.ECONOMY),
      new ButtonBuilder()
        .setCustomId('help_gambling')
        .setLabel(t(interaction, 'help_btn_gambling'))
        .setStyle(currentCategory === CATEGORIES.GAMBLING ? ButtonStyle.Primary : ButtonStyle.Secondary)
        .setDisabled(currentCategory === CATEGORIES.GAMBLING),
      new ButtonBuilder()
        .setCustomId('help_mining')
        .setLabel(t(interaction, 'help_btn_mining'))
        .setStyle(currentCategory === CATEGORIES.MINING ? ButtonStyle.Primary : ButtonStyle.Secondary)
        .setDisabled(currentCategory === CATEGORIES.MINING),
      new ButtonBuilder()
        .setCustomId('help_profile')
        .setLabel(t(interaction, 'help_btn_profile'))
        .setStyle(currentCategory === CATEGORIES.PROFILE ? ButtonStyle.Primary : ButtonStyle.Secondary)
        .setDisabled(currentCategory === CATEGORIES.PROFILE)
    );
}

function getSecondaryButtons(interaction: ChatInputCommandInteraction, currentCategory: string): ActionRowBuilder<ButtonBuilder> {
  return new ActionRowBuilder<ButtonBuilder>()
    .addComponents(
      new ButtonBuilder()
        .setCustomId('help_bounty')
        .setLabel(t(interaction, 'help_btn_bounty'))
        .setStyle(currentCategory === CATEGORIES.BOUNTY ? ButtonStyle.Primary : ButtonStyle.Secondary)
        .setDisabled(currentCategory === CATEGORIES.BOUNTY),
      new ButtonBuilder()
        .setCustomId('help_admin')
        .setLabel(t(interaction, 'help_btn_admin'))
        .setStyle(currentCategory === CATEGORIES.ADMIN ? ButtonStyle.Primary : ButtonStyle.Secondary)
        .setDisabled(currentCategory === CATEGORIES.ADMIN),
      new ButtonBuilder()
        .setCustomId('help_utility')
        .setLabel(t(interaction, 'help_btn_utility'))
        .setStyle(currentCategory === CATEGORIES.UTILITY ? ButtonStyle.Primary : ButtonStyle.Secondary)
        .setDisabled(currentCategory === CATEGORIES.UTILITY),
      new ButtonBuilder()
        .setCustomId('help_overview')
        .setLabel(t(interaction, 'help_btn_home'))
        .setStyle(currentCategory === CATEGORIES.OVERVIEW ? ButtonStyle.Success : ButtonStyle.Secondary)
        .setDisabled(currentCategory === CATEGORIES.OVERVIEW)
    );
}

function getLinkButtons(interaction: ChatInputCommandInteraction): ActionRowBuilder<ButtonBuilder> {
  return new ActionRowBuilder<ButtonBuilder>()
    .addComponents(
      new ButtonBuilder()
        .setLabel(t(interaction, 'help_btn_support'))
        .setStyle(ButtonStyle.Link)
        .setURL('https://discord.gg/gXwaYFNhfp'),
      new ButtonBuilder()
        .setLabel(t(interaction, 'help_btn_invite'))
        .setStyle(ButtonStyle.Link)
        .setURL('https://discord.com/api/oauth2/authorize?client_id=1426734768111747284&permissions=277025770496&scope=bot%20applications.commands'),
      new ButtonBuilder()
        .setLabel(t(interaction, 'help_btn_website'))
        .setStyle(ButtonStyle.Link)
        .setURL(`https://${process.env.REPLIT_DEV_DOMAIN || 'sheriff-bot.repl.co'}`)
    );
}

function getEmbedForCategory(category: string, interaction: ChatInputCommandInteraction): EmbedBuilder {
  switch (category) {
    case CATEGORIES.ECONOMY:
      return getEconomyEmbed(interaction);
    case CATEGORIES.GAMBLING:
      return getGamblingEmbed(interaction);
    case CATEGORIES.MINING:
      return getMiningEmbed(interaction);
    case CATEGORIES.PROFILE:
      return getProfileEmbed(interaction);
    case CATEGORIES.BOUNTY:
      return getBountyEmbed(interaction);
    case CATEGORIES.ADMIN:
      return getAdminEmbed(interaction);
    case CATEGORIES.UTILITY:
      return getUtilityEmbed(interaction);
    default:
      return getOverviewEmbed(interaction);
  }
}

export = {
  data: new SlashCommandBuilder()
    .setName('help')
    .setDescription('Shows all available commands and their descriptions')
    .setContexts([0, 1, 2])
    .setIntegrationTypes([0, 1]),
  async execute(interaction: ChatInputCommandInteraction): Promise<void> {
    const embed = getOverviewEmbed(interaction);
    const buttons = getCategoryButtons(interaction, CATEGORIES.OVERVIEW);
    const secondaryButtons = getSecondaryButtons(interaction, CATEGORIES.OVERVIEW);
    const linkButtons = getLinkButtons(interaction);

    const reply = await interaction.reply({
      embeds: [embed],
      components: [buttons, secondaryButtons, linkButtons],
      flags: MessageFlags.Ephemeral
    });

    const collector = reply.createMessageComponentCollector({
      componentType: ComponentType.Button,
      time: 300000
    });

    collector.on('collect', async (buttonInteraction: ButtonInteraction) => {
      if (buttonInteraction.user.id !== interaction.user.id) {
        await buttonInteraction.reply({
          content: t(interaction, 'help_only_user'),
          flags: MessageFlags.Ephemeral
        });
        return;
      }

      const category = buttonInteraction.customId.replace('help_', '');
      const newEmbed = getEmbedForCategory(category, interaction);
      const newButtons = getCategoryButtons(interaction, category);
      const newSecondaryButtons = getSecondaryButtons(interaction, category);

      await buttonInteraction.update({
        embeds: [newEmbed],
        components: [newButtons, newSecondaryButtons, linkButtons]
      });
    });

    collector.on('end', async () => {
      try {
        await interaction.editReply({
          components: []
        });
      } catch (error) {
      }
    });
  },
};
